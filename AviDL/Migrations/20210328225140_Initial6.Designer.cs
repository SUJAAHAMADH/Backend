// <auto-generated />
using AviDL;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

namespace AviDL.Migrations
{
    [DbContext(typeof(AviDBContext))]
    [Migration("20210328225140_Initial6")]
    partial class Initial6
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 63)
                .HasAnnotation("ProductVersion", "5.0.4")
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

            modelBuilder.Entity("AviModels.Contributor", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int>("PilotID")
                        .HasColumnType("integer");

                    b.Property<int>("UserID")
                        .HasColumnType("integer");

                    b.HasKey("ID");

                    b.HasIndex("PilotID");

                    b.HasIndex("UserID");

                    b.ToTable("Contributors");
                });

            modelBuilder.Entity("AviModels.File", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("FileDescription")
                        .HasColumnType("text");

                    b.Property<string>("FileName")
                        .HasColumnType("text");

                    b.Property<string>("FileURL")
                        .HasColumnType("text");

                    b.Property<string>("ParsedID")
                        .HasColumnType("text");

                    b.Property<int>("PilotID")
                        .HasColumnType("integer");

                    b.Property<int>("UploaderID")
                        .HasColumnType("integer");

                    b.HasKey("ID");

                    b.HasIndex("PilotID");

                    b.HasIndex("UploaderID");

                    b.ToTable("Files");
                });

            modelBuilder.Entity("AviModels.Pilot", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("PilotDescription")
                        .HasColumnType("text");

                    b.Property<string>("PilotName")
                        .HasColumnType("text");

                    b.Property<int>("ProducerID")
                        .HasColumnType("integer");

                    b.HasKey("ID");

                    b.HasIndex("ProducerID");

                    b.ToTable("Pilots");
                });

            modelBuilder.Entity("AviModels.Scene", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("ParsedID")
                        .HasColumnType("text");

                    b.Property<int>("PilotID")
                        .HasColumnType("integer");

                    b.Property<string>("SceneDescription")
                        .HasColumnType("text");

                    b.Property<int>("SceneIndex")
                        .HasColumnType("integer");

                    b.Property<string>("SceneName")
                        .HasColumnType("text");

                    b.HasKey("ID");

                    b.HasIndex("PilotID");

                    b.ToTable("Scenes");
                });

            modelBuilder.Entity("AviModels.SceneFile", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int>("FileID")
                        .HasColumnType("integer");

                    b.Property<int>("SceneID")
                        .HasColumnType("integer");

                    b.HasKey("ID");

                    b.HasIndex("FileID");

                    b.HasIndex("SceneID");

                    b.ToTable("SceneFiles");
                });

            modelBuilder.Entity("AviModels.Script", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int>("PilotID")
                        .HasColumnType("integer");

                    b.Property<string>("ScriptURL")
                        .HasColumnType("text");

                    b.Property<int>("ScriptWriterID")
                        .HasColumnType("integer");

                    b.HasKey("ID");

                    b.HasIndex("PilotID")
                        .IsUnique();

                    b.HasIndex("ScriptWriterID");

                    b.ToTable("Scripts");
                });

            modelBuilder.Entity("AviModels.User", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Email")
                        .HasColumnType("text");

                    b.Property<string>("FirstName")
                        .HasColumnType("text");

                    b.Property<string>("LastName")
                        .HasColumnType("text");

                    b.Property<int>("PhoneNumb")
                        .HasColumnType("integer");

                    b.Property<string>("UserName")
                        .HasColumnType("text");

                    b.HasKey("ID");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("AviModels.Contributor", b =>
                {
                    b.HasOne("AviModels.Pilot", "Pilot")
                        .WithMany()
                        .HasForeignKey("PilotID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AviModels.User", "User")
                        .WithMany("Contributors")
                        .HasForeignKey("UserID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Pilot");

                    b.Navigation("User");
                });

            modelBuilder.Entity("AviModels.File", b =>
                {
                    b.HasOne("AviModels.Pilot", "Pilot")
                        .WithMany("Files")
                        .HasForeignKey("PilotID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AviModels.User", "Uploader")
                        .WithMany("Files")
                        .HasForeignKey("UploaderID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Pilot");

                    b.Navigation("Uploader");
                });

            modelBuilder.Entity("AviModels.Pilot", b =>
                {
                    b.HasOne("AviModels.User", "Producer")
                        .WithMany("Pilots")
                        .HasForeignKey("ProducerID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Producer");
                });

            modelBuilder.Entity("AviModels.Scene", b =>
                {
                    b.HasOne("AviModels.Pilot", "Pilot")
                        .WithMany("Scenes")
                        .HasForeignKey("PilotID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Pilot");
                });

            modelBuilder.Entity("AviModels.SceneFile", b =>
                {
                    b.HasOne("AviModels.File", "File")
                        .WithMany("SceneFiles")
                        .HasForeignKey("FileID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AviModels.Scene", "Scene")
                        .WithMany("SceneFiles")
                        .HasForeignKey("SceneID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("File");

                    b.Navigation("Scene");
                });

            modelBuilder.Entity("AviModels.Script", b =>
                {
                    b.HasOne("AviModels.Pilot", null)
                        .WithOne("Script")
                        .HasForeignKey("AviModels.Script", "PilotID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AviModels.User", "ScriptWriter")
                        .WithMany("Scripts")
                        .HasForeignKey("ScriptWriterID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ScriptWriter");
                });

            modelBuilder.Entity("AviModels.File", b =>
                {
                    b.Navigation("SceneFiles");
                });

            modelBuilder.Entity("AviModels.Pilot", b =>
                {
                    b.Navigation("Files");

                    b.Navigation("Scenes");

                    b.Navigation("Script");
                });

            modelBuilder.Entity("AviModels.Scene", b =>
                {
                    b.Navigation("SceneFiles");
                });

            modelBuilder.Entity("AviModels.User", b =>
                {
                    b.Navigation("Contributors");

                    b.Navigation("Files");

                    b.Navigation("Pilots");

                    b.Navigation("Scripts");
                });
#pragma warning restore 612, 618
        }
    }
}
